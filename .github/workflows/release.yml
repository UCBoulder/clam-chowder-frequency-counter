name: Build and Release

on:
  push:
    tags:
      - "v*"   # triggers only for version tags like v1.0.0

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          pyinstaller --onefile --noconsole --icon clam-chowder/soup.ico main.py

      - name: Package for Linux (AppImage)
        if: runner.os == 'Linux'
        run: |
          mkdir -p AppDir/usr/bin
          cp dist/main AppDir/usr/bin/clam-chowder
          
          mkdir -p AppDir/usr/share/applications
          cat > AppDir/usr/share/applications/clam-chowder.desktop <<EOF
[Desktop Entry]
Type=Application
Name=Clam Chowder
Exec=clam-chowder
Icon=clam-chowder
Categories=Utility;
EOF

          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
          cp clam_chowder/assets/red.jpg AppDir/usr/share/icons/hicolor/256x256/apps/clam-chowder.png || true

          wget -q https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O appimagetool
          chmod +x appimagetool

          # Use non-mounting mode to avoid hang
          ./appimagetool --appimage-extract-and-run AppDir clam-chowder-Linux.AppImage

      - name: Prepare release folder
        run: |
          mkdir release
          if [ "${{ runner.os }}" = "Windows" ]; then
            mv dist/main.exe release/clam-chowder-Windows.exe
          elif [ "${{ runner.os }}" = "macOS" ]; then
            mv dist/main release/clam-chowder-macOS
          else
            mv clam-chowder-Linux.AppImage release/clam-chowder-Linux.AppImage
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: clam-chowder-${{ runner.os }}
          path: release/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./release/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
